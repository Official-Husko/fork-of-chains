name: Release Build

on:
  push:
    tags:
      - '*.*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show current commit and branch
        run: |
          echo "Commit: $(git rev-parse HEAD)"
          echo "Branches:"
          git branch -a
          echo "Tags:"
          git tag --contains $(git rev-parse HEAD)

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build (release)
        run: npm run build

      - name: Zip full release (full game)
        run: |
          cd dist
          zip -r ../full-game.zip .
          cd ..

      - name: Zip imagepack only
        run: |
          cd dist
          zip -r ../imagepack-release.zip imagepacks
          cd ..

      - name: Zip mods only
        run: |
          cd dist
          zip -r ../mods-release.zip mods
          cd ..

      - name: Zip update files
        run: |
          cd dist
          zip -r ../update-release.zip index.html precompiled.html js js-debug
          cd ..

      - name: Zip assets (img and assets folders)
        run: |
          cd dist
          zip -r ../assets-release.zip img assets
          cd ..

      - name: Set prerelease flag
        id: prerelease
        run: |
          if [[ "${GITHUB_REF##*/}" == *-pre* || "${GITHUB_REF##*/}" == *-alpha* || "${GITHUB_REF##*/}" == *-beta* || "${GITHUB_REF##*/}" == *-rc* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.prerelease.outputs.prerelease }}
          files: |
            full-game.zip
            imagepack-release.zip
            mods-release.zip
            update-release.zip
            assets-release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
